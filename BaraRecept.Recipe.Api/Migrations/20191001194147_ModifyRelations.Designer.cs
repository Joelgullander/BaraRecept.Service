// <auto-generated />
using System;
using BaraRecept.Recipe.Api.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BaraRecept.Recipe.Api.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20191001194147_ModifyRelations")]
    partial class ModifyRelations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BaraRecept.Recipe.Api.Database.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BaraRecept.Recipe.Api.Database.Cuisine", b =>
                {
                    b.Property<int>("CuisineId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CuisineName");

                    b.HasKey("CuisineId");

                    b.ToTable("Cuisines");
                });

            modelBuilder.Entity("BaraRecept.Recipe.Api.Database.Keyword", b =>
                {
                    b.Property<int>("KeywordId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("KeywordName");

                    b.HasKey("KeywordId");

                    b.ToTable("Keywords");
                });

            modelBuilder.Entity("BaraRecept.Recipe.Api.Database.RecipeItem", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author");

                    b.Property<DateTime>("CookingTime");

                    b.Property<DateTime?>("Created");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<DateTime>("PrepTime");

                    b.Property<int>("QuantityServings");

                    b.Property<int?>("RecipeCategoryCategoryId");

                    b.Property<int?>("RecipeCuisineCuisineId");

                    b.Property<string>("RecipeIngredients");

                    b.Property<string>("RecipeInstructions");

                    b.Property<DateTime?>("Updated");

                    b.HasKey("RecipeId");

                    b.HasIndex("RecipeCategoryCategoryId");

                    b.HasIndex("RecipeCuisineCuisineId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("BaraRecept.Recipe.Api.Database.RecipeKeyword", b =>
                {
                    b.Property<int>("RecipeId");

                    b.Property<int>("KeywordId");

                    b.HasKey("RecipeId", "KeywordId");

                    b.HasIndex("KeywordId");

                    b.ToTable("RecipeKeyword");
                });

            modelBuilder.Entity("BaraRecept.Recipe.Api.Database.RecipeItem", b =>
                {
                    b.HasOne("BaraRecept.Recipe.Api.Database.Category", "RecipeCategory")
                        .WithMany()
                        .HasForeignKey("RecipeCategoryCategoryId");

                    b.HasOne("BaraRecept.Recipe.Api.Database.Cuisine", "RecipeCuisine")
                        .WithMany()
                        .HasForeignKey("RecipeCuisineCuisineId");
                });

            modelBuilder.Entity("BaraRecept.Recipe.Api.Database.RecipeKeyword", b =>
                {
                    b.HasOne("BaraRecept.Recipe.Api.Database.Keyword", "Keyword")
                        .WithMany("RecipeKeywords")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BaraRecept.Recipe.Api.Database.RecipeItem", "Recipe")
                        .WithMany("RecipeKeywords")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
